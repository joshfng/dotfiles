#!/usr/bin/env bash

# shellcheck disable=SC2312,SC2154

declare PLATFORM
if [[ "${OSTYPE}" == "linux"* ]]; then
  PLATFORM="linux"
elif [[ "${OSTYPE}" == "darwin"* ]]; then
  PLATFORM="darwin"
fi
export PLATFORM

DOTFILES_PATH=${DOTFILES_PATH:-$(dirname "$(realpath "${BASH_SOURCE[0]}")")}
export DOTFILES_PATH

# Prefer US English and use UTF-8.
export LANG='en_US.UTF-8'
export LC_ALL='en_US.UTF-8'
export PYTHONIOENCODING='UTF-8'

export EDITOR=vim

export XDG_CONFIG_HOME="${HOME}/.config"

GPG_TTY=$(tty)
export GPG_TTY

export MANPAGER='less -X'

# shellcheck disable=SC2154
if [[ "${COLORTERM}" = gnome-* && "${TERM}" = xterm ]] && infocmp gnome-256color > /dev/null 2>&1; then
  export TERM='gnome-256color'
elif infocmp xterm-256color > /dev/null 2>&1; then
  export TERM='xterm-256color'
fi

# PATH="/usr/bin:/bin:/usr/sbin:/sbin"

# shellcheck source=bin/lib/defaults.sh
[[ -f "${HOME}/bin/lib/defaults.sh" ]] && source "${HOME}/bin/lib/defaults.sh"

export HOMEBREW_NO_ANALYTICS=1
export HOMEBREW_NO_ENV_HINTS=1

if [[ "${PLATFORM-}" == "darwin" ]]; then
  # Apple M series chip install location
  [[ -f /opt/homebrew/bin/brew ]] && eval "$(/opt/homebrew/bin/brew shellenv)"

  # Apple Intel chip install location
  [[ -f /usr/local/bin/brew ]] && eval "$(/usr/local/bin/brew shellenv)"
elif [[ "${PLATFORM-}" == "linux" ]]; then
  [[ -f /home/linuxbrew/.linuxbrew/bin/brew ]] &&
    eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
fi

SHELL="$(command -v bash)"
export SHELL

export GOPATH="${HOME}/go"

export DOCKER_BUILDKIT=1
export COMPOSE_DOCKER_CLI_BUILD=1

MAKEFLAGS="--jobs $(proc_count)"
export MAKEFLAGS

# BAK
# export PATH="/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin" || source /etc/profile
#
# $ getconf PATH
# /usr/bin:/bin:/usr/sbin:/sbin
#
# $ /usr/libexec/path_helper -s
# PATH="/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Applications/Wireshark.app/Contents/MacOS:/Applications/Little Snitch.app/Contents/Components:/Users/j/.asdf/shims:/Users/j/.asdf/bin:/Users/j/bin:/Users/j/bin/git:/Users/j/go/bin:/Users/j/.local/bin:/Users/j/.docker/bin:/opt/homebrew/opt/gnu-sed/libexec/gnubin:/opt/homebrew/opt/libpq/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/Applications/iTerm.app/Contents/Resources/utilities"; export PATH;
#
# order by priority desc (highest priority should be listed last)
prepend_path "${HOMEBREW_PREFIX}/opt/libpq/bin"
prepend_path "${HOMEBREW_PREFIX}/opt/gnu-sed/libexec/gnubin"
prepend_path "${HOME}/.docker/bin"
prepend_path "${HOME}/.local/bin"
prepend_path "${GOPATH}/bin"
prepend_path "${HOME}/bin/git"
prepend_path "${HOME}/bin"

export LDFLAGS="-L${HOMEBREW_PREFIX}/opt/libpq/lib"
export CPPFLAGS="-I${HOMEBREW_PREFIX}/opt/libpq/include"
export PKG_CONFIG_PATH="${HOMEBREW_PREFIX}/opt/libpq/lib/pkgconfig"

export RUBY_BUILD_OPTS="--verbose"

export RUBYOPT="--yjit"

# Set default blocksize for ls, df, du
export BLOCKSIZE=1k

# https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-envvars.html
export AWS_DEFAULT_PROFILE="dev"
export AWS_DEFAULT_REGION="us-east-1"
