plugins:
  #--- Create debug container for selected pod in current namespace
  # See https://kubernetes.io/docs/tasks/debug/debug-application/debug-running-pod/#ephemeral-container
  debug:
    shortCut: Shift-D
    description: Add debug container
    dangerous: true
    scopes:
      - containers
    command: bash
    background: false
    confirm: true
    args:
      - -c
      - "kubectl --kubeconfig=$KUBECONFIG debug -it --context $CONTEXT -n=$NAMESPACE $POD --target=$NAME --image=nicolaka/netshoot:v0.12 --share-processes -- bash"
  # # plugin to easily open eks-node-viewer on viewed context
  # # requires eks-node-viewer installed on system
  # # https://github.com/awslabs/eks-node-viewer/
  # eks-node-viewer:
  #   shortCut: Shift-X
  #   description: "eks-node-viewer"
  #   scopes:
  #     - node
  #   background: false
  #   command: bash
  #   args:
  #   - -c
  #   - |
  #     env $(kubectl config view --context $CONTEXT --minify -o json | jq -r ".users[0].user.exec.env[] | select(.name == \"AWS_PROFILE\") | \"AWS_PROFILE=\" + .value" && kubectl config view --context $CONTEXT --minify -o json | jq -r ".users[0].user.exec.args | \"AWS_REGION=\" + .[1]") eks-node-viewer --context $CONTEXT --resources cpu,memory --extra-labels karpenter.sh/nodepool,eks-node-viewer/node-age --node-sort=creation=dsc
  # toggle-helmrelease:
  #   shortCut: Shift-T
  #   confirm: true
  #   scopes:
  #     - helmreleases
  #   description: Toggle to suspend or resume a HelmRelease
  #   command: bash
  #   background: false
  #   args:
  #     - -c
  #     - >-
  #       suspended=$(kubectl --context $CONTEXT get helmreleases -n $NAMESPACE $NAME -o=custom-columns=TYPE:.spec.suspend | tail -1);
  #       verb=$([ $suspended = "true" ] && echo "resume" || echo "suspend");
  #       flux
  #       $verb helmrelease
  #       --context $CONTEXT
  #       -n $NAMESPACE $NAME
  #       | less -K
  # toggle-kustomization:
  #   shortCut: Shift-T
  #   confirm: true
  #   scopes:
  #     - kustomizations
  #   description: Toggle to suspend or resume a Kustomization
  #   command: bash
  #   background: false
  #   args:
  #     - -c
  #     - >-
  #       suspended=$(kubectl --context $CONTEXT get kustomizations -n $NAMESPACE $NAME -o=custom-columns=TYPE:.spec.suspend | tail -1);
  #       verb=$([ $suspended = "true" ] && echo "resume" || echo "suspend");
  #       flux
  #       $verb kustomization
  #       --context $CONTEXT
  #       -n $NAMESPACE $NAME
  #       | less -K
  # reconcile-git:
  #   shortCut: Shift-R
  #   confirm: false
  #   description: Flux reconcile
  #   scopes:
  #     - gitrepositories
  #   command: bash
  #   background: false
  #   args:
  #     - -c
  #     - >-
  #       flux
  #       reconcile source git
  #       --context $CONTEXT
  #       -n $NAMESPACE $NAME
  #       | less -K
  # reconcile-hr:
  #   shortCut: Shift-R
  #   confirm: false
  #   description: Flux reconcile
  #   scopes:
  #     - helmreleases
  #   command: bash
  #   background: false
  #   args:
  #     - -c
  #     - >-
  #       flux
  #       reconcile helmrelease
  #       --context $CONTEXT
  #       -n $NAMESPACE $NAME
  #       | less -K
  # reconcile-helm-repo:
  #   shortCut: Shift-Z
  #   description: Flux reconcile
  #   scopes:
  #     - helmrepositories
  #   command: bash
  #   background: false
  #   confirm: false
  #   args:
  #     - -c
  #     - >-
  #       flux
  #       reconcile source helm
  #       --context $CONTEXT
  #       -n $NAMESPACE $NAME
  #       | less -K
  # reconcile-oci-repo:
  #   shortCut: Shift-Z
  #   description: Flux reconcile
  #   scopes:
  #     - ocirepositories
  #   command: bash
  #   background: false
  #   confirm: false
  #   args:
  #     - -c
  #     - >-
  #       flux
  #       reconcile source oci
  #       --context $CONTEXT
  #       -n $NAMESPACE $NAME
  #       | less -K
  # reconcile-ks:
  #   shortCut: Shift-R
  #   confirm: false
  #   description: Flux reconcile
  #   scopes:
  #     - kustomizations
  #   command: bash
  #   background: false
  #   args:
  #     - -c
  #     - >-
  #       flux
  #       reconcile kustomization
  #       --context $CONTEXT
  #       -n $NAMESPACE $NAME
  #       | less -K
  # reconcile-ir:
  #   shortCut: Shift-R
  #   confirm: false
  #   description: Flux reconcile
  #   scopes:
  #     - imagerepositories
  #   command: sh
  #   background: false
  #   args:
  #     - -c
  #     - >-
  #       flux
  #       reconcile image repository
  #       --context $CONTEXT
  #       -n $NAMESPACE $NAME
  #       | less -K
  # reconcile-iua:
  #   shortCut: Shift-R
  #   confirm: false
  #   description: Flux reconcile
  #   scopes:
  #     - imageupdateautomations
  #   command: sh
  #   background: false
  #   args:
  #     - -c
  #     - >-
  #       flux
  #       reconcile image update
  #       --context $CONTEXT
  #       -n $NAMESPACE $NAME
  #       | less -K
  # trace:
  #   shortCut: Shift-P
  #   confirm: false
  #   description: Flux trace
  #   scopes:
  #     - all
  #   command: bash
  #   background: false
  #   args:
  #     - -c
  #     - >-
  #       resource=$(echo $RESOURCE_NAME | sed -E 's/ies$/y/' | sed -E 's/ses$/se/' | sed -E 's/(s|es)$//g')
  #       flux
  #       trace
  #       --context $CONTEXT
  #       --kind $resource
  #       --api-version $RESOURCE_GROUP/$RESOURCE_VERSION
  #       --namespace $NAMESPACE $NAME
  #       | less -K
  # # credits: https://github.com/fluxcd/flux2/discussions/2494
  # get-suspended-helmreleases:
  #   shortCut: Shift-S
  #   confirm: false
  #   description: Suspended Helm Releases
  #   scopes:
  #     - helmrelease
  #   command: sh
  #   background: false
  #   args:
  #     - -c
  #     - >-
  #       kubectl get
  #       --context $CONTEXT
  #       --all-namespaces
  #       helmreleases.helm.toolkit.fluxcd.io -o json
  #       | jq -r '.items[] | select(.spec.suspend==true) | [.metadata.namespace,.metadata.name,.spec.suspend] | @tsv'
  #       | less -K
  # get-suspended-kustomizations:
  #   shortCut: Shift-S
  #   confirm: false
  #   description: Suspended Kustomizations
  #   scopes:
  #     - kustomizations
  #   command: sh
  #   background: false
  #   args:
  #     - -c
  #     - >-
  #       kubectl get
  #       --context $CONTEXT
  #       --all-namespaces
  #       kustomizations.kustomize.toolkit.fluxcd.io -o json
  #       | jq -r '.items[] | select(.spec.suspend==true) | [.metadata.name,.spec.suspend] | @tsv'
  #       | less -K
  helm-default-values:
    shortCut: Shift-V
    confirm: false
    description: Chart Default Values
    scopes:
      - helm
    command: sh
    background: false
    args:
      - -c
      - >-
        revision=$(helm history -n $NAMESPACE --kube-context $CONTEXT $COL-NAME | grep deployed | cut -d$'\t' -f1 | tr -d ' \t');
        kubectl
        get secrets
        --context $CONTEXT
        -n $NAMESPACE
        sh.helm.release.v1.$COL-NAME.v$revision -o yaml
        | yq e '.data.release' -
        | base64 -d
        | base64 -d
        | gunzip
        | jq -r '.chart.values'
        | yq -P
        | less -K
  helm-values:
    shortCut: v
    confirm: false
    description: Values
    scopes:
      - helm
    command: sh
    background: false
    args:
      - -c
      - "helm get values $COL-NAME -n $NAMESPACE --kube-context $CONTEXT | less -K"
  # See https://k9scli.io/topics/plugins/
  raw-logs-follow:
    shortCut: Ctrl-G
    description: logs -f
    scopes:
    - po
    command: kubectl
    background: false
    args:
    - logs
    - -f
    - $NAME
    - -n
    - $NAMESPACE
    - --context
    - $CONTEXT
    - --kubeconfig
    - $KUBECONFIG
  log-less:
    shortCut: Shift-K
    description: "logs|less"
    scopes:
    - po
    command: bash
    background: false
    args:
    - -c
    - '"$@" | less'
    - dummy-arg
    - kubectl
    - logs
    - $NAME
    - -n
    - $NAMESPACE
    - --context
    - $CONTEXT
    - --kubeconfig
    - $KUBECONFIG
  log-less-container:
    shortCut: Shift-L
    description: "logs|less"
    scopes:
    - containers
    command: bash
    background: false
    args:
    - -c
    - '"$@" | less'
    - dummy-arg
    - kubectl
    - logs
    - -c
    - $NAME
    - $POD
    - -n
    - $NAMESPACE
    - --context
    - $CONTEXT
    - --kubeconfig
    - $KUBECONFIG
  remove_finalizers:
    shortCut: Ctrl-F
    confirm: true
    dangerous: true
    scopes:
      - all
    description: |
      Removes all finalizers from selected resource. Be careful when using it,
      it may leave dangling resources or delete them
    command: kubectl
    background: true
    args:
      - patch
      - --context
      - $CONTEXT
      - --namespace
      - $NAMESPACE
      - $RESOURCE_NAME.$RESOURCE_GROUP
      - $NAME
      - -p
      - '{"metadata":{"finalizers":null}}'
      - --type
      - merge
  watch-events:
    shortCut: Shift-E
    confirm: false
    description: Get Events
    scopes:
    - all
    command: sh
    background: false
    args:
    - -c
    - "watch -n 5 kubectl get events --context $CONTEXT --namespace $NAMESPACE --field-selector involvedObject.name=$NAME"
